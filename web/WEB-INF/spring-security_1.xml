<beans xmlns="http://www.springframework.org/schema/beans"
	
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	
	<!-- Begin Web Security -->
	<!-- unsecured resource if needed -->
	<sec:http pattern="/images/**" security="none"/> 
	<sec:http>
	    <!-- configure the roles allowed to access the app -->
	    <sec:intercept-url pattern="/**" access="hasAnyRole('MANAGER', 'USER')"/>
	    <!-- add more urls/patters/roles to refine security -->
	    
	    <sec:form-login/>
	    <sec:logout/>
	    <!-- if you are adding to an exiting app, 
				you may need to disable CSRF protection until you can make application changes. -->
	    <!-- sec:csrf disabled="true"/ -->
	</sec:http>

	<!-- add the properties below to your app's properties file 
			or replace with hardcoded values to get working -->
	<sec:ldap-server 
		id="contextSource" 
		url="ldap://${ldap.server}:${ldap.port}/"
		manager-dn="${ldap.manager.user}"
		manager-password="${ldap.manager.password}"/>
		 
	<sec:authentication-manager erase-credentials="true">
		<sec:authentication-provider ref='ldapAuthProvider' />
	</sec:authentication-manager>
	 
	 
	<!-- using bean-based configuration here to set the DefaultLdapAuthoritiesPopulater with 
		ignorePartialResultsException=true.  This is a known Spring/AD issue and a workaround for it -->
	<bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
		<constructor-arg>
			<!-- the bind authenticator will first lookup the user using the service account credentials, then 
				 attempt to bind the user with their password once found -->
			<bean id="bindAuthenticator" class="org.springframework.security.ldap.authentication.BindAuthenticator">
				<constructor-arg ref="contextSource" />
				<property name="userSearch" ref="userSearch" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
				<constructor-arg ref="contextSource" />
				<constructor-arg value="OU=Usu치rios,OU=Patos de Minas,OU=Unidades de Neg칩cio,DC=terrenaagro,DC=com,DC=br" /> <!-- group search base -->
				<!-- <property name="defaultRole" value="ROLE_USER" /> 
					You can add a default role to everyone if needed -->
				<property name="searchSubtree" value="true" />
				<property name="ignorePartialResultException" value="true" />
				<property name="groupSearchFilter" value="(member={0})" />
			</bean>
		</constructor-arg>
	</bean>
	<bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		<constructor-arg index="0" value="OU=Usu치rios,OU=Patos de Minas,OU=Unidades de Neg칩cio,DC=terrenaagro,DC=com,DC=br" />
		<constructor-arg index="1" value="(sAMAccountName={0})" />
		<constructor-arg index="2" ref="contextSource" />
		<property name="searchSubtree" value="true" />
	</bean>
	<!--  end Web Security -->
</beans>